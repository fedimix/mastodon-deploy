
- name: create a default router configuration
  template:
    src: ../files/Caddyfile
    dest: "{{ config_root }}/router/Caddyfile"
    owner: "{{ svc_user }}"
    group: "{{ svc_user }}"
    mode: "644"
    force: no

- name: create container configuration
  template:
    src: ../../inventory/.env.prod
    dest: "{{ config_root }}/.env.prod"
    owner: "{{ svc_user }}"
    group: "{{ svc_user }}"
    mode: "644"
    force: yes

- name: create a default static site for LOCAL_DOMAIN
  template:
    src: ../files/index.html
    dest: "{{ storage_root }}/router/{{ namespace }}/public/index.html"
    owner: "{{ svc_user }}"
    group: "{{ svc_user }}"
    mode: "644"
    force: no

- name: stop and remove the pod
  ignore_errors: true
  shell: >
    podman pod stop {{ namespace }}

    podman pod rm {{ namespace }}

- name: create the pod
  shell: >
    podman pod create -n {{ namespace }} \
    -p 80:80 -p 443:443

- name: create the router container
  shell: >
    podman create --name router --restart always \
    --pod {{ namespace }} \
    --env=LETS_ENCRYPT_EMAIL={{ lets_encrypt_mail }} \
    -v {{ config_root }}:/config -v {{ storage_root }}/router/{{ namespace }}:/data \
    {{ router_image }}:{{ router_image_version }}

- name: create redis container
  shell: >
    podman create --name redis --restart always \
    --pod {{ namespace }} \
    -v {{ storage_root }}/{{ namespace }}/redis:/data \
    {{ redis_image }}:{{ redis_image_version }}

- name: create postgres container
  shell: >
    podman create --name db --restart always \
    --pod {{ namespace }} \
    --env-file={{ config_root }}/.env.prod \
    -v {{ storage_root }}/{{ namespace }}/postgres:/var/lib/postgresql/data \
    {{ postgres_image }}:{{ postgres_image_version }}

- name: start the pod
  shell: >
    podman pod start {{ namespace }}

- name: pause to give containers time to start-up
  ansible.builtin.pause:
    minutes: 1